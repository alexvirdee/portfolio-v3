!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=0)}([function(e,t){var n;document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelectorAll(".modal"),t=(M.Modal.init(e,{onCloseEnd:function(){!function(){for(var e=document.getElementsByClassName("links"),t=0;t<e.length;t++)e[t].style.display="block"}()}}),document.querySelectorAll(".fixed-action-btn"));M.FloatingActionButton.init(t)})),n=(new Date).getFullYear(),document.getElementById("currentYear").innerHTML=n;var o=["Alex Virdee","Develop","Design","Learn"],r=0,a=document.getElementById("site-title");function i(){a.innerHTML=o[r],a.style.opacity=1,setTimeout(l,2e3)}function l(){++r>o.length-1?a.innerHTML=o[0]:(a.style.opacity=0,setTimeout(i,1e3))}i();var u,s,c;document.getElementById("current-job-title").innerHTML="Software Engineer II";function d(){for(var e=document.getElementsByClassName("modal"),t=0;t<e.length;t++)for(var n=document.getElementsByClassName("links"),o=0;o<n.length;o++)"block"!=e[o].style.display&&(n[o].style.display="none")}!function(){for(var e=document.getElementsByClassName("modal-trigger"),t=0;t<e.length;t++)e[t].addEventListener("click",(function(){d()}))}(),u=document.getElementById("contact-form"),s=document.getElementById("js-form-response"),c=document.getElementById("contact-submit-btn"),u.onsubmit=function(e){e.preventDefault();var t={};Array.from(u).map((function(e){return t[e.name]=e.value})),console.log(JSON.stringify(t));var n=new XMLHttpRequest;n.open(u.method,u.action,!0),n.setRequestHeader("Accept","application/json; charset=utf-8"),n.setRequestHeader("Content-Type","application/json; charset=utf-8"),c.textContent="Sending...",n.send(JSON.stringify(t)),n.onreadystatechange=function(){c.textContent="Send Message"},n.onloadend=function(e){200===e.target.status?(u.reset(),s=M.toast({html:"Thanks for sending a message over, I'll be in touch shortly!"})):(s.innerHTML="Error sending your message. Try again.",console.error(JSON.parse(e.target.response.message)))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,